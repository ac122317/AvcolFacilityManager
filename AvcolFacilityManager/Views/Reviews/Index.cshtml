@model PaginatedList<AvcolFacilityManager.Models.Reviews>
@using System.Security.Claims

@{
    ViewData["Title"] = "Reviews";
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<div class="text-center my-4">
    <h1 class="display-4">Reviews</h1>
    <p class="lead">View and manage reviews for facilities.</p>
</div>

@if (User.Identity.IsAuthenticated)
{
    <div class="mb-3 text-start">
        <a class="btn btn-success" asp-action="Create">➕ Create New Review</a>
    </div>
}

<form asp-action="Index" method="get" class="mb-4">
    <div class="input-group">
        <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by facility name..." />
        <button type="submit" class="btn btn-primary">Search</button>
        <a class="btn btn-secondary" asp-action="Index">Reset</a>
    </div>
</form>

@if (!Model.Any() && !string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()))
{
    <div class="alert alert-warning" role="alert">
        No reviews found for facilities named "<strong>@ViewData["CurrentFilter"]</strong>".
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-md-4 g-4">
        @foreach (var item in Model)
        {
            <div class="col">
                <div class="card h-100 shadow-sm card-border">
                    <div class="card-body">
                        <h5 class="card-title">@item.Booking.Facility.FacilityName</h5>
                        <p class="card-text"><strong>Rating:</strong> @item.Rating</p>
                        <p class="card-text"><strong>Comment:</strong> @item.Comment</p>
                        <p class="card-text"><strong>Date Created:</strong> @item.DateCreated.ToString("MMMM dd, yyyy")</p>
                    </div>
                    <div class="card-footer bg-transparent border-top-0">
                        <div class="d-flex justify-content-between">
                            <a class="btn btn-info btn-sm" asp-action="Details" asp-route-id="@item.ReviewId">Details</a>

                            @if (User.IsInRole("Admin") || item.Booking.AppUserId == currentUserId)
                            {
                                <div class="btn-group">
                                    <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@item.ReviewId">Edit</a>
                                    <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.ReviewId">Delete</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@if (Model.Any())
{
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Previous
                </a>
            </li>
            <li class="page-item disabled">
                <span class="page-link">Page @Model.PageIndex of @Model.TotalPages</span>
            </li>
            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Next
                </a>
            </li>
        </ul>
    </nav>
}
